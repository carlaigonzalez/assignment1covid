{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "3cdeadd3",
   "metadata": {},
   "source": [
    "## Assignment #1 Data collection and curation\n",
    "\n",
    "#### Below we are going to analyze covid vaccination data from a survey created in google forms: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1c12d657",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "df = pd.read_csv(\"covid survey results.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d09f0e5d",
   "metadata": {},
   "source": [
    "#### First step: Familiarize with data set\n",
    "Looking at the head and tail of a data set can be helpful to know  what type of date we are analyzing."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "97a0d6c1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>respondent</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Vaccineted?</th>\n",
       "      <th>if yes, which?</th>\n",
       "      <th>Side effects?</th>\n",
       "      <th>which ones: (Select all that apply)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>f</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headeche, fever, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>m</td>\n",
       "      <td>24</td>\n",
       "      <td>yes</td>\n",
       "      <td>pfizer</td>\n",
       "      <td>yes</td>\n",
       "      <td>headache, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>f</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>f</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>f</td>\n",
       "      <td>49</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headache, arm pain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   respondent Gender Age Vaccineted? if yes, which? Side effects?  \\\n",
       "0           0      f  20        yes         moderna           yes   \n",
       "1           1      m  24        yes          pfizer           yes   \n",
       "2           2      f  20        yes        moderna             no   \n",
       "3           3      f  20        yes         moderna           yes   \n",
       "4           4      f  49        yes         moderna           yes   \n",
       "\n",
       "  which ones: (Select all that apply)  \n",
       "0           headeche, fever, arm pain  \n",
       "1                  headache, arm pain  \n",
       "2                                none  \n",
       "3                           arm pain   \n",
       "4                  headache, arm pain  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8acb1d4f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>respondent</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Vaccineted?</th>\n",
       "      <th>if yes, which?</th>\n",
       "      <th>Side effects?</th>\n",
       "      <th>which ones: (Select all that apply)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>96</td>\n",
       "      <td>m</td>\n",
       "      <td>21</td>\n",
       "      <td>yes</td>\n",
       "      <td>J&amp;J</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>97</td>\n",
       "      <td>m</td>\n",
       "      <td>22</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>98</td>\n",
       "      <td>m</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>pfizer</td>\n",
       "      <td>yes</td>\n",
       "      <td>tiredness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>99</td>\n",
       "      <td>f</td>\n",
       "      <td>19</td>\n",
       "      <td>yes</td>\n",
       "      <td>pfizer</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>100</td>\n",
       "      <td>f</td>\n",
       "      <td>21</td>\n",
       "      <td>yes</td>\n",
       "      <td>pfizer</td>\n",
       "      <td>yes</td>\n",
       "      <td>headache, arm pain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     respondent Gender Age Vaccineted? if yes, which? Side effects?  \\\n",
       "96           96      m  21        yes             J&J            no   \n",
       "97           97      m  22        yes         moderna           yes   \n",
       "98           98      m  20        yes          pfizer           yes   \n",
       "99           99      f  19        yes          pfizer            no   \n",
       "100         100      f  21        yes          pfizer           yes   \n",
       "\n",
       "    which ones: (Select all that apply)  \n",
       "96                                 none  \n",
       "97                            arm pain   \n",
       "98                            tiredness  \n",
       "99                                 none  \n",
       "100                  headache, arm pain  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a1ed1f5",
   "metadata": {},
   "source": [
    "Another important step is knowing the lenght of the dataset, which can be easily found with the next function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "8717521e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "101\n"
     ]
    }
   ],
   "source": [
    "print(len(df))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "8bc27221",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'arm pain '"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"which ones: (Select all that apply)\"][85]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cb65dd20",
   "metadata": {},
   "source": [
    "In the next lines we are checking which types of data we are analyzig, which can be helpful when trying to process and clean it:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a84a7af1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n"
     ]
    }
   ],
   "source": [
    "print(type(df))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "534241ad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.series.Series'>\n"
     ]
    }
   ],
   "source": [
    "print(type(df[\"Age\"]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e1eb4ac7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'moderna'"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"if yes, which?\"][75]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f94cb392",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "respondent <class 'numpy.int64'>\n",
      "Gender <class 'str'>\n",
      "Age <class 'str'>\n",
      "Vaccineted? <class 'str'>\n",
      "if yes, which? <class 'str'>\n",
      "Side effects? <class 'str'>\n",
      "which ones: (Select all that apply) <class 'str'>\n"
     ]
    }
   ],
   "source": [
    "for col in df.columns:\n",
    "    print(col, type(df[col][0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "0dd397be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>respondent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>101.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>29.300171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>25.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>75.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>100.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       respondent\n",
       "count  101.000000\n",
       "mean    50.000000\n",
       "std     29.300171\n",
       "min      0.000000\n",
       "25%     25.000000\n",
       "50%     50.000000\n",
       "75%     75.000000\n",
       "max    100.000000"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "044b0c62",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "20    32\n",
       "21    20\n",
       "19    11\n",
       "22    10\n",
       "18     8\n",
       "17     4\n",
       "23     3\n",
       "25     2\n",
       "24     2\n",
       "65     1\n",
       "47     1\n",
       "45     1\n",
       "27     1\n",
       "15     1\n",
       "28     1\n",
       "50     1\n",
       "49     1\n",
       "29     1\n",
       "Name: Age, dtype: int64"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"Age\"].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3cd1ffcf",
   "metadata": {},
   "source": [
    "### Clean\n",
    "\n",
    "While looking at the data, I noticied someone added the word \"years\" in the age entry box, for all the entries to be equal we are going to change that"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "b546bfbf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'45 years'"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"Age\"][55]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "dc751d86",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'45'"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[55, \"Age\"] = \"45\"\n",
    "df[\"Age\"][55]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b616f2e7",
   "metadata": {},
   "source": [
    "### Histogram\n",
    "\n",
    "This next graph presents the distribution of ages in the survey.\n",
    "For the graph to be made is important to first convert string into interger:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "cb6070e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"Age\"] = df[\"Age\"].astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "598c49e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Number of Observations')"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "df.hist(column= \"Age\")\n",
    "plt.ylabel(\"Number of Observations\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3105bc17",
   "metadata": {},
   "source": [
    "When creating another histogram with the distibution of the different types of vaccines, we noticed moderna vaccine doubles, apparently the user added a space at the end of the word, so lets fix it:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "20b838c0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "moderna        35\n",
       "pfizer         30\n",
       "J&J            19\n",
       "moderna         1\n",
       "AstraZeneca     1\n",
       "Name: if yes, which?, dtype: int64"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"if yes, which?\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "29804453",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>respondent</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Vaccineted?</th>\n",
       "      <th>if yes, which?</th>\n",
       "      <th>Side effects?</th>\n",
       "      <th>which ones: (Select all that apply)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>f</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   respondent Gender  Age Vaccineted? if yes, which? Side effects?  \\\n",
       "2           2      f   20        yes        moderna             no   \n",
       "\n",
       "  which ones: (Select all that apply)  \n",
       "2                                none  "
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df[\"if yes, which?\"]== \"moderna \"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "0aa7e9f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>respondent</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Vaccineted?</th>\n",
       "      <th>if yes, which?</th>\n",
       "      <th>Side effects?</th>\n",
       "      <th>which ones: (Select all that apply)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [respondent, Gender, Age, Vaccineted?, if yes, which?, Side effects?, which ones: (Select all that apply)]\n",
       "Index: []"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[df[\"if yes, which?\"]==\"moderna \", \"if yes, which?\"] = \"moderna\"\n",
    "df[df[\"if yes, which?\"]== \"moderna \"]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1841b3be",
   "metadata": {},
   "source": [
    "Now that the problem is fixed, here is the histogram:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "163b4fdb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Number of Observations')"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "type_counts = df[\"if yes, which?\"].value_counts()\n",
    "plt.rcParams[\"figure.figsize\"] = (20,10)\n",
    "type_counts.plot.bar()\n",
    "plt.xlabel(\"Covid vaccine type\")\n",
    "plt.ylabel(\"Number of Observations\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4284d3f",
   "metadata": {},
   "source": [
    "### Now lets compare different vaccines and its effect on people:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "974d39cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "none                                            30\n",
       "arm pain                                        16\n",
       "headache, arm pain                               9\n",
       "headeche, fever, arm pain                        8\n",
       "arm pain, tiredness                              6\n",
       "headache                                         5\n",
       "headeche, fever, arm pain, tiredness             3\n",
       "fever, arm pain                                  3\n",
       "tiredness                                        3\n",
       "headeche, fever, arm pain, tiredness, nausea     1\n",
       "fever, chills                                    1\n",
       "fever, tiredness                                 1\n",
       "Name: which ones: (Select all that apply), dtype: int64"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"which ones: (Select all that apply)\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "865fb2d5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>respondent</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Vaccineted?</th>\n",
       "      <th>if yes, which?</th>\n",
       "      <th>Side effects?</th>\n",
       "      <th>which ones: (Select all that apply)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>f</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headeche, fever, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>m</td>\n",
       "      <td>24</td>\n",
       "      <td>yes</td>\n",
       "      <td>pfizer</td>\n",
       "      <td>yes</td>\n",
       "      <td>headache, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>f</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>f</td>\n",
       "      <td>49</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headache, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>m</td>\n",
       "      <td>17</td>\n",
       "      <td>yes</td>\n",
       "      <td>pfizer</td>\n",
       "      <td>yes</td>\n",
       "      <td>headache, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>93</td>\n",
       "      <td>f</td>\n",
       "      <td>21</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>95</td>\n",
       "      <td>f</td>\n",
       "      <td>20</td>\n",
       "      <td>no</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>97</td>\n",
       "      <td>m</td>\n",
       "      <td>22</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>98</td>\n",
       "      <td>m</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>pfizer</td>\n",
       "      <td>yes</td>\n",
       "      <td>tiredness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>100</td>\n",
       "      <td>f</td>\n",
       "      <td>21</td>\n",
       "      <td>yes</td>\n",
       "      <td>pfizer</td>\n",
       "      <td>yes</td>\n",
       "      <td>headache, arm pain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>71 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     respondent Gender  Age Vaccineted? if yes, which? Side effects?  \\\n",
       "0             0      f   20        yes         moderna           yes   \n",
       "1             1      m   24        yes          pfizer           yes   \n",
       "3             3      f   20        yes         moderna           yes   \n",
       "4             4      f   49        yes         moderna           yes   \n",
       "5             5      m   17        yes          pfizer           yes   \n",
       "..          ...    ...  ...         ...            ...           ...   \n",
       "93           93      f   21          no            NaN           NaN   \n",
       "95           95      f   20          no            NaN           NaN   \n",
       "97           97      m   22        yes         moderna           yes   \n",
       "98           98      m   20        yes          pfizer           yes   \n",
       "100         100      f   21        yes          pfizer           yes   \n",
       "\n",
       "    which ones: (Select all that apply)  \n",
       "0             headeche, fever, arm pain  \n",
       "1                    headache, arm pain  \n",
       "3                             arm pain   \n",
       "4                    headache, arm pain  \n",
       "5                    headache, arm pain  \n",
       "..                                  ...  \n",
       "93                                  NaN  \n",
       "95                                  NaN  \n",
       "97                            arm pain   \n",
       "98                            tiredness  \n",
       "100                  headache, arm pain  \n",
       "\n",
       "[71 rows x 7 columns]"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df[\"which ones: (Select all that apply)\"]!= \"none\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "96a15d72",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>respondent</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Vaccineted?</th>\n",
       "      <th>if yes, which?</th>\n",
       "      <th>Side effects?</th>\n",
       "      <th>which ones: (Select all that apply)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>f</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headeche, fever, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>f</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>f</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>f</td>\n",
       "      <td>49</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headache, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>f</td>\n",
       "      <td>21</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headeche, fever, arm pain, tiredness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>f</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headeche, fever, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>f</td>\n",
       "      <td>18</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headache</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>m</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headache, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>21</td>\n",
       "      <td>f</td>\n",
       "      <td>21</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain, tiredness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>27</td>\n",
       "      <td>m</td>\n",
       "      <td>19</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headeche, fever, arm pain, tiredness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>28</td>\n",
       "      <td>f</td>\n",
       "      <td>23</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>29</td>\n",
       "      <td>m</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>no</td>\n",
       "      <td>headache, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>33</td>\n",
       "      <td>f</td>\n",
       "      <td>21</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headeche, fever, arm pain, tiredness, nausea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>34</td>\n",
       "      <td>f</td>\n",
       "      <td>65</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>35</td>\n",
       "      <td>m</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>39</td>\n",
       "      <td>f</td>\n",
       "      <td>22</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>41</td>\n",
       "      <td>m</td>\n",
       "      <td>25</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>43</td>\n",
       "      <td>f</td>\n",
       "      <td>22</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headeche, fever, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>52</td>\n",
       "      <td>m</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>53</td>\n",
       "      <td>f</td>\n",
       "      <td>21</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headeche, fever, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>58</td>\n",
       "      <td>f</td>\n",
       "      <td>19</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>59</td>\n",
       "      <td>m</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headeche, fever, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>62</td>\n",
       "      <td>m</td>\n",
       "      <td>19</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>65</td>\n",
       "      <td>m</td>\n",
       "      <td>21</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>66</td>\n",
       "      <td>m</td>\n",
       "      <td>18</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain, tiredness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>68</td>\n",
       "      <td>m</td>\n",
       "      <td>18</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>71</td>\n",
       "      <td>m</td>\n",
       "      <td>21</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>72</td>\n",
       "      <td>m</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headeche, fever, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>75</td>\n",
       "      <td>f</td>\n",
       "      <td>18</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>tiredness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>81</td>\n",
       "      <td>f</td>\n",
       "      <td>21</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>82</td>\n",
       "      <td>m</td>\n",
       "      <td>22</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>86</td>\n",
       "      <td>m</td>\n",
       "      <td>19</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>89</td>\n",
       "      <td>m</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>fever, tiredness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>90</td>\n",
       "      <td>f</td>\n",
       "      <td>18</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>headeche, fever, arm pain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>94</td>\n",
       "      <td>m</td>\n",
       "      <td>20</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>no</td>\n",
       "      <td>none</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>97</td>\n",
       "      <td>m</td>\n",
       "      <td>22</td>\n",
       "      <td>yes</td>\n",
       "      <td>moderna</td>\n",
       "      <td>yes</td>\n",
       "      <td>arm pain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    respondent Gender  Age Vaccineted? if yes, which? Side effects?  \\\n",
       "0            0      f   20        yes         moderna           yes   \n",
       "2            2      f   20        yes         moderna            no   \n",
       "3            3      f   20        yes         moderna           yes   \n",
       "4            4      f   49        yes         moderna           yes   \n",
       "9            9      f   21        yes         moderna           yes   \n",
       "10          10      f   20        yes         moderna           yes   \n",
       "12          12      f   18        yes         moderna           yes   \n",
       "17          17      m   20        yes         moderna           yes   \n",
       "21          21      f   21        yes         moderna           yes   \n",
       "27          27      m   19        yes         moderna           yes   \n",
       "28          28      f   23        yes         moderna            no   \n",
       "29          29      m   20        yes         moderna            no   \n",
       "33          33      f   21        yes         moderna           yes   \n",
       "34          34      f   65        yes         moderna            no   \n",
       "35          35      m   20        yes         moderna            no   \n",
       "39          39      f   22        yes         moderna            no   \n",
       "41          41      m   25        yes         moderna            no   \n",
       "43          43      f   22        yes         moderna           yes   \n",
       "52          52      m   20        yes         moderna            no   \n",
       "53          53      f   21        yes         moderna           yes   \n",
       "58          58      f   19        yes         moderna           yes   \n",
       "59          59      m   20        yes         moderna           yes   \n",
       "62          62      m   19        yes         moderna           yes   \n",
       "65          65      m   21        yes         moderna           yes   \n",
       "66          66      m   18        yes         moderna           yes   \n",
       "68          68      m   18        yes         moderna            no   \n",
       "71          71      m   21        yes         moderna            no   \n",
       "72          72      m   20        yes         moderna           yes   \n",
       "75          75      f   18        yes         moderna           yes   \n",
       "81          81      f   21        yes         moderna           yes   \n",
       "82          82      m   22        yes         moderna           yes   \n",
       "86          86      m   19        yes         moderna           yes   \n",
       "89          89      m   20        yes         moderna           yes   \n",
       "90          90      f   18        yes         moderna           yes   \n",
       "94          94      m   20        yes         moderna            no   \n",
       "97          97      m   22        yes         moderna           yes   \n",
       "\n",
       "             which ones: (Select all that apply)  \n",
       "0                      headeche, fever, arm pain  \n",
       "2                                           none  \n",
       "3                                      arm pain   \n",
       "4                             headache, arm pain  \n",
       "9           headeche, fever, arm pain, tiredness  \n",
       "10                     headeche, fever, arm pain  \n",
       "12                                      headache  \n",
       "17                            headache, arm pain  \n",
       "21                           arm pain, tiredness  \n",
       "27          headeche, fever, arm pain, tiredness  \n",
       "28                                          none  \n",
       "29                            headache, arm pain  \n",
       "33  headeche, fever, arm pain, tiredness, nausea  \n",
       "34                                          none  \n",
       "35                                          none  \n",
       "39                                          none  \n",
       "41                                          none  \n",
       "43                     headeche, fever, arm pain  \n",
       "52                                          none  \n",
       "53                     headeche, fever, arm pain  \n",
       "58                                     arm pain   \n",
       "59                     headeche, fever, arm pain  \n",
       "62                                     arm pain   \n",
       "65                                     arm pain   \n",
       "66                           arm pain, tiredness  \n",
       "68                                          none  \n",
       "71                                          none  \n",
       "72                     headeche, fever, arm pain  \n",
       "75                                     tiredness  \n",
       "81                                     arm pain   \n",
       "82                                     arm pain   \n",
       "86                                     arm pain   \n",
       "89                              fever, tiredness  \n",
       "90                     headeche, fever, arm pain  \n",
       "94                                          none  \n",
       "97                                     arm pain   "
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df[\"if yes, which?\"]== \"moderna\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aef2c485",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "129c674a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
